<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>谁动了我的芝麻酱</title>
  
  <subtitle>一选择，一条路，一岔口</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.cuihp.top/"/>
  <updated>2018-06-20T07:01:18.527Z</updated>
  <id>https://blog.cuihp.top/</id>
  
  <author>
    <name>CuiHp</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ADB常用命令</title>
    <link href="https://blog.cuihp.top/2018/06/1406cjimryeoi0001ppfy5i46hyh4.html"/>
    <id>https://blog.cuihp.top/2018/06/1406cjimryeoi0001ppfy5i46hyh4.html</id>
    <published>2018-06-14T07:14:00.000Z</published>
    <updated>2018-06-20T07:01:18.527Z</updated>
    
    <content type="html"><![CDATA[<img src="https://img.cuihp.top/2956affbfa5ebcd906f54ba4a8a5755f.jpg"/><h4 id="当有多个设备连接时"><a href="#当有多个设备连接时" class="headerlink" title="当有多个设备连接时"></a>当有多个设备连接时</h4><ul><li>通过 <code>adb devices</code> 命令获取到设备名称</li><li>通过 <code>adb -s 设备名称</code> 指定设备执行命令</li></ul><h4 id="打开设置界面"><a href="#打开设置界面" class="headerlink" title="打开设置界面"></a>打开设置界面</h4><ul><li><code>adb shell am start com.android.settings/com.android.settings.Settings</code></li></ul><h4 id="发送广播"><a href="#发送广播" class="headerlink" title="发送广播"></a>发送广播</h4><pre><code>[-a &lt;ACTION&gt;][-d &lt;DATA_URI&gt;][-t &lt;MIME_TYPE&gt;] [-c &lt;CATEGORY&gt; [-c &lt;CATEGORY&gt;] ...] [-e|--es &lt;EXTRA_KEY&gt; &lt;EXTRA_STRING_VALUE&gt; 字符串] [--ez &lt;EXTRA_KEY&gt; &lt;EXTRA_BOOLEAN_VALUE&gt; boolean] [-e|--ei &lt;EXTRA_KEY&gt; &lt;EXTRA_INT_VALUE&gt; int ] [-n &lt;COMPONENT&gt;][-f &lt;FLAGS&gt;] [&lt;URI&gt;]</code></pre><ul><li>实例 <code>adb shell am broadcast -a com.android.test --es key &quot;value&quot;</code></li></ul><h4 id="查看当前显示的Activity-包名、类名信息"><a href="#查看当前显示的Activity-包名、类名信息" class="headerlink" title="查看当前显示的Activity 包名、类名信息"></a>查看当前显示的Activity 包名、类名信息</h4><ul><li><code>adb shell dumpsys activity | grep &quot;mFocusedActivity&quot;</code></li></ul><h4 id="系统签名过的apk-安装"><a href="#系统签名过的apk-安装" class="headerlink" title="系统签名过的apk 安装"></a>系统签名过的apk 安装</h4><ul><li>进行系统签名 <code>java -jar signapk.jar platform.x509.pem platform.pk8 Demo.apk signedDemo.apk</code></li><li>将apk copy到 sd卡 <code>adb push demo.apk /sdcard/</code></li><li>进入终端 <code>adb shell</code></li><li>切换超级用户<code>su</code></li><li>挂载<code>mount -o remount /system</code></li><li>将APK copy到系统目录下 <code>busybox mv /sdcard/signed.apk /system/app</code></li><li>安装APK <code>adb install /system/app/signed.apk</code></li><li><code>reboot</code></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;https://img.cuihp.top/2956affbfa5ebcd906f54ba4a8a5755f.jpg&quot;/&gt;&lt;h4 id=&quot;当有多个设备连接时&quot;&gt;&lt;a href=&quot;#当有多个设备连接时&quot; class=&quot;headerlink&quot; title=&quot;当有多
      
    
    </summary>
    
      <category term="other" scheme="https://blog.cuihp.top/categories/other/"/>
    
    
      <category term="adb" scheme="https://blog.cuihp.top/tags/adb/"/>
    
  </entry>
  
  <entry>
    <title>注册码</title>
    <link href="https://blog.cuihp.top/2018/05/0305cjimryepc000jppfy5aoclpox.html"/>
    <id>https://blog.cuihp.top/2018/05/0305cjimryepc000jppfy5aoclpox.html</id>
    <published>2018-05-03T02:30:00.000Z</published>
    <updated>2018-05-07T09:45:48.333Z</updated>
    
    <content type="html"><![CDATA[<img src="https://img.cuihp.top/2505bb8d5aad692aea674be9437f9ae7.jpg"/><h3 id="Charles-注册码"><a href="#Charles-注册码" class="headerlink" title="Charles 注册码"></a>Charles 注册码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Registered Name:https://zhile.io</span><br><span class="line"></span><br><span class="line">License Key: 48891cf209c6d32bf4</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;https://img.cuihp.top/2505bb8d5aad692aea674be9437f9ae7.jpg&quot;/&gt;&lt;h3 id=&quot;Charles-注册码&quot;&gt;&lt;a href=&quot;#Charles-注册码&quot; class=&quot;headerlink&quot; title=
      
    
    </summary>
    
      <category term="other" scheme="https://blog.cuihp.top/categories/other/"/>
    
    
      <category term="code" scheme="https://blog.cuihp.top/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>Android反编译</title>
    <link href="https://blog.cuihp.top/2018/03/2703cjimryeor0002ppfy68qjjw3g.html"/>
    <id>https://blog.cuihp.top/2018/03/2703cjimryeor0002ppfy68qjjw3g.html</id>
    <published>2018-03-27T14:59:15.000Z</published>
    <updated>2018-05-07T09:45:56.571Z</updated>
    
    <content type="html"><![CDATA[<img src="https://img.cuihp.top/90e3d3734d6d7e1d3754c129c27b93a0.jpg"/><hr><ul><li>安装必要的工具（MAC OS）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">brew install apktool </span><br><span class="line">brew install smali </span><br><span class="line">brew install dex2jar </span><br><span class="line">brew install jadx </span><br><span class="line">brew cask install jd-gui</span><br></pre></td></tr></table></figure><ul><li>apktool</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// 提取资源  同时将 Binaray XML 形式转化成 xml </span><br><span class="line">apktool d test.apk</span><br><span class="line">// 提取资源并指定输出目录</span><br><span class="line">apktool d test.apk -o test</span><br><span class="line">// 重新打包apk</span><br><span class="line">apktool b test</span><br></pre></td></tr></table></figure><ul><li>jadx 将 .dex/.jar/.class 文件反编译成 .java 源码</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// 反编译 test.dex 并输出到 test 目录</span><br><span class="line">jadx test.dex -d test</span><br><span class="line"></span><br><span class="line">// 反编译 test.apk</span><br><span class="line">jadx test.apk -d test</span><br><span class="line"></span><br><span class="line">// 反编译 test.jar</span><br><span class="line">jadx test.jar -d test</span><br><span class="line"></span><br><span class="line">// 反编译 test.class</span><br><span class="line">jadx test.class -d test</span><br></pre></td></tr></table></figure><ul><li>签名</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">jarsigner -verbose -keystore /Users/cuihp/Downloads/a/appkey  -signedjar /Users/cuihp/Downloads/a/abc.apk /Users/cuihp/Downloads/a/swfplayer/dist/swfplayer.apk  key0</span><br><span class="line"></span><br><span class="line">/Users/cuihp/Downloads/a/appkey 签名文件路径</span><br><span class="line">/Users/cuihp/Downloads/a/abc.apk 签名后文件输出路径</span><br><span class="line">/Users/cuihp/Downloads/a/swfplayer/dist/swfplayer.apk  要签名的文件路径</span><br><span class="line">key0 签名文件别名</span><br><span class="line"></span><br><span class="line">adb install -r /Users/cuihp/Downloads/a/abc.apk</span><br></pre></td></tr></table></figure><ul><li>jd-gui 查看jar 文件</li></ul><p><a href="https://juejin.im/entry/585f3646da2f600065903ff7" target="_blank" rel="noopener">参考链接</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;https://img.cuihp.top/90e3d3734d6d7e1d3754c129c27b93a0.jpg&quot;/&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;安装必要的工具（MAC OS）&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight pla
      
    
    </summary>
    
      <category term="android" scheme="https://blog.cuihp.top/categories/android/"/>
    
    
      <category term="other" scheme="https://blog.cuihp.top/tags/other/"/>
    
  </entry>
  
  <entry>
    <title>Shadowsocks 服务器安装</title>
    <link href="https://blog.cuihp.top/2017/10/2510cjimryeow0005ppfy4xpesmse.html"/>
    <id>https://blog.cuihp.top/2017/10/2510cjimryeow0005ppfy4xpesmse.html</id>
    <published>2017-10-25T08:53:31.000Z</published>
    <updated>2018-05-07T09:46:26.967Z</updated>
    
    <content type="html"><![CDATA[<img src="https://img.cuihp.top/6bc16f9c1c4e404404e7c5a4eeabed0c.jpg"/><h3 id="MacOS-连接-远程服务器"><a href="#MacOS-连接-远程服务器" class="headerlink" title="MacOS 连接 远程服务器"></a>MacOS 连接 远程服务器</h3><p><code>sudo -i</code>//切换到root</p><p><code>ssh root@ip</code> //进行连接  </p><h3 id="搭建-Shadowsocks-服务"><a href="#搭建-Shadowsocks-服务" class="headerlink" title="搭建 Shadowsocks 服务"></a>搭建 Shadowsocks 服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ yum install m2crypto python-setuptools</span><br><span class="line">$ easy_install pip</span><br><span class="line">$ pip install shadowsocks</span><br></pre></td></tr></table></figure><p>安装完成后配置服务器参数</p><p><code>$ vi  /etc/shadowsocks.json</code></p><p>json 内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;server&quot;:&quot;0.0.0.0&quot;,</span><br><span class="line">    &quot;server_port&quot;:443,</span><br><span class="line">    &quot;local_address&quot;: &quot;127.0.0.1&quot;,</span><br><span class="line">    &quot;local_port&quot;:1080,</span><br><span class="line">    &quot;password&quot;:&quot;123456&quot;, #自行修改</span><br><span class="line">    &quot;timeout&quot;:300,</span><br><span class="line">    &quot;method&quot;:&quot;aes-256-cfb&quot;,</span><br><span class="line">    &quot;fast_open&quot;: false</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置防火墙</p><p><code>$ yum install firewalld</code><br><code>$ systemctl start firewalld</code></p><p>开启防火墙相应的端口</p><p><code>$ firewall-cmd --permanent --zone=public --add-port=443/tcp</code><br><code>$ firewall-cmd --reload</code></p><h3 id="启动-Shadowsocks-服务"><a href="#启动-Shadowsocks-服务" class="headerlink" title="启动 Shadowsocks 服务"></a>启动 Shadowsocks 服务</h3><p>前台运行</p><p><code>$ ssserver -c /etc/shadowsocks.json</code></p><p>后台运行服务 </p><p><code>sudo ssserver -c /etc/shadowsocks.json -d start</code></p><p>开机自启动</p><h3 id="Google-BBR-VPS加速"><a href="#Google-BBR-VPS加速" class="headerlink" title="Google BBR VPS加速"></a>Google BBR VPS加速</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;https://img.cuihp.top/6bc16f9c1c4e404404e7c5a4eeabed0c.jpg&quot;/&gt;&lt;h3 id=&quot;MacOS-连接-远程服务器&quot;&gt;&lt;a href=&quot;#MacOS-连接-远程服务器&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
      <category term="other" scheme="https://blog.cuihp.top/categories/other/"/>
    
    
      <category term="CentOs Shadowsocks Mac" scheme="https://blog.cuihp.top/tags/CentOs-Shadowsocks-Mac/"/>
    
  </entry>
  
  <entry>
    <title>MapBox 地图</title>
    <link href="https://blog.cuihp.top/2017/05/2605cjimryep10006ppfyuoozn0fx.html"/>
    <id>https://blog.cuihp.top/2017/05/2605cjimryep10006ppfyuoozn0fx.html</id>
    <published>2017-05-26T06:30:00.000Z</published>
    <updated>2018-05-07T09:46:10.073Z</updated>
    
    <content type="html"><![CDATA[<img src="https://img.cuihp.top/392cce9e113b9d37d09cadac0693d989.jpg"/><p>个人感觉地图UI真的是很漂亮，如果你也在为你的应用寻找一款漂亮的地图，MapBox值得一试。看图：</p><p><img src="https://img.cuihp.top/f913c86e2e32bb61.png" alt="CuiHp"></p><h3 id="Add-Mapbox-as-a-dependency-to-your-build-gradle-file"><a href="#Add-Mapbox-as-a-dependency-to-your-build-gradle-file" class="headerlink" title="Add Mapbox as a dependency to your build.gradle file:"></a>Add Mapbox as a dependency to your <code>build.gradle</code> file:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">repositories &#123;</span><br><span class="line">    mavenCentral()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    compile (&apos;com.mapbox.mapboxsdk:mapbox-android-sdk:5.0.2@aar&apos;)&#123;</span><br><span class="line">        transitive=true</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Required-configuration"><a href="#Required-configuration" class="headerlink" title="Required configuration"></a>Required configuration</h2><h3 id="Permissions"><a href="#Permissions" class="headerlink" title="Permissions"></a>Permissions</h3><p>从5.0开始，减少了需要包括任何地图SDK所需的东西在您的应用程序的清单文件。如果您计划在地图上显示用户位置或获取用户位置信息，您将需要添加位置许可。用户位置的权限也应检查使用<code>AndroidManifest.xml</code>时：</p><p><code>&lt;uses-permission android:name=&quot;android.permission.ACCESS_COARSE_LOCATION&quot; /&gt;</code><br>or<br><code>&lt;uses-permission android:name=&quot;android.permission.ACCESS_FINE_LOCATION&quot; /&gt;</code></p><h3 id="Supported-Android-versions"><a href="#Supported-Android-versions" class="headerlink" title="Supported Android versions"></a>Supported Android versions</h3><p>MAPbox Android SDK是应用程序运行Android 15及以上。确保在你的应用程序的例子，请设置在应用程序清单以不低于15。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;uses-sdk android:minSdkVersion=&quot;15&quot;</span><br><span class="line">          android:targetSdkVersion=&quot;integer&quot;</span><br><span class="line">          android:maxSdkVersion=&quot;integer&quot; /&gt;</span><br></pre></td></tr></table></figure><h2 id="API-overview"><a href="#API-overview" class="headerlink" title="API overview"></a>API overview</h2><h3 id="MapView-and-MapboxMap"><a href="#MapView-and-MapboxMap" class="headerlink" title="MapView and MapboxMap"></a>MapView and MapboxMap</h3><p><code>MapView</code>和<code>MapboxMap</code>是Mapbox Android SDK的关键组件。 MapView的行为与任何其他视图一样，其行为可以使用XML布局文件静态更改，或者在运行时以编程方式更改。您可以将MapboxMap视为地图的控制器类。它包括设置和移动相机位置，添加标记，配置用户交互等的方法。</p><h3 id="Lifecycle-methods"><a href="#Lifecycle-methods" class="headerlink" title="Lifecycle methods"></a>Lifecycle methods</h3><p><code>MapView</code>包含自己的生命周期方法，用于管理Android的OpenGL生命周期，必须直接从包含的<code>Activity</code>调用。为了让您的应用程序正确地调用<code>MapView</code>的生命周期方法，您必须在包含MapView的<code>Activity</code>中覆盖以下生命周期方法:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">onCreate();</span><br><span class="line">onStart();</span><br><span class="line">onResume();</span><br><span class="line">onPause();</span><br><span class="line">onStop();</span><br><span class="line">onSaveInstanceState();</span><br><span class="line">onLowMemory();</span><br><span class="line">onDestroy();</span><br></pre></td></tr></table></figure><h3 id="XML-layout"><a href="#XML-layout" class="headerlink" title="XML layout"></a>XML layout</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;com.mapbox.mapboxsdk.maps.MapView</span><br><span class="line">android:id=&quot;@+id/mapview&quot;</span><br><span class="line">android:layout_width=&quot;match_parent&quot;</span><br><span class="line">android:layout_height=&quot;match_parent&quot;</span><br><span class="line">mapbox:mapbox_styleUrl=&quot;@string/style_mapbox_streets&quot; /&gt;</span><br></pre></td></tr></table></figure><h3 id="Access-tokens"><a href="#Access-tokens" class="headerlink" title="Access tokens"></a>Access tokens</h3><p>需要使用访问令牌来使用Mapbox服务和API，例如地图，路线和地理编码。您的访问令牌可以在您的<a href="https://www.mapbox.com/account/apps/" target="_blank" rel="noopener">帐户设置</a>中进行管理，您可以在其中检索当前的令牌并生成新的令牌。您应该为每个应用程序创建一个新的令牌，这将有助于您跟踪使用情况，并在令牌需要撤销的情况下尽量减少中断。</p><p>在您的应用程序中提供访问令牌有两个地方。如果您使用自定义应用程序对象，则可以将其放在<code>onCreate()</code>中，也可以在应用程序启动活动<code>onCreate()</code>上。在这两种情况下，您都需要调用<code>MapboxAccountManager</code>并传递上下文和访问令牌：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Mapbox.getInstance(context, &lt;your access token here&gt;);</span><br></pre></td></tr></table></figure><h3 id="Map-styles"><a href="#Map-styles" class="headerlink" title="Map styles"></a>Map styles</h3><ul><li><strong>Mapbox Streets</strong>: Mapbox Streets is a comprehensive, general-purpose map that emphasizes accurate, legible styling of road and transit networks.</li><li><strong>Outdoor</strong>: Mapbox Outdoors is a general-purpose map with curated datasets and specialized styling tailored to hiking, biking, and the most adventurous use cases..</li><li><strong>Light and Dark</strong>: Mapbox Light and Mapbox Dark are subtle, full-featured maps designed to provide geographic context while highlighting the data on your analytics dashboard, data visualization, or data overlay.</li><li><strong>Satellite</strong>: is our full global base map that is perfect as a blank canvas or an overlay for your own data.</li><li><strong>Satellite Streets</strong>: combines our Mapbox Satellite with vector data from Mapbox Streets. The comprehensive set of road, label, and POI information brings clarity and context to the crisp detail in our high-resolution satellite imagery.</li></ul><h4 id="更多使用—-gt-官网地址"><a href="#更多使用—-gt-官网地址" class="headerlink" title="更多使用—&gt;官网地址"></a>更多使用—&gt;<a href="https://www.mapbox.com/account/apps/" target="_blank" rel="noopener">官网地址</a></h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;https://img.cuihp.top/392cce9e113b9d37d09cadac0693d989.jpg&quot;/&gt;&lt;p&gt;个人感觉地图UI真的是很漂亮，如果你也在为你的应用寻找一款漂亮的地图，MapBox值得一试。看图：&lt;/p&gt;
&lt;p&gt;&lt;img src=
      
    
    </summary>
    
      <category term="android" scheme="https://blog.cuihp.top/categories/android/"/>
    
    
      <category term="android" scheme="https://blog.cuihp.top/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>Vue项目初始化</title>
    <link href="https://blog.cuihp.top/2017/05/1005cjimryep9000gppfyl4940f0r.html"/>
    <id>https://blog.cuihp.top/2017/05/1005cjimryep9000gppfyl4940f0r.html</id>
    <published>2017-05-10T02:12:31.000Z</published>
    <updated>2018-05-07T09:47:15.016Z</updated>
    
    <content type="html"><![CDATA[<img src="https://img.cuihp.top/2aff6f722178a78759ea1635918a0df8.jpg"/><h3 id="webpack安装"><a href="#webpack安装" class="headerlink" title="webpack安装"></a>webpack安装</h3><p><code>npm install -g webpack</code>//全局安装</p><p><code>npm install -g webpack-dev-server</code> //安装调试工具</p><h3 id="安装vue-cli"><a href="#安装vue-cli" class="headerlink" title="安装vue-cli"></a>安装vue-cli</h3><p><code>npm install -g vue-cli</code> //全局安装vue-cli</p><p><code>vue init webpack projectName</code> //项目名称</p><p><code>cd projectName</code> //进入项目文件</p><p><code>npm install</code> //初始化安装依赖</p><p>安装后会生成如下图的目录：</p><p><img src="https://img.cuihp.top/3D048899A7976948BA628C851E1E6E09.jpg" alt="avatar"></p><p>初始化依赖完成后，命令运行：<code>npm run dev</code>。</p><p>ok</p><hr><h3 id="webpack-config-js的一些配置"><a href="#webpack-config-js的一些配置" class="headerlink" title="webpack.config.js的一些配置"></a>webpack.config.js的一些配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">var path = require(&apos;path&apos;);</span><br><span class="line">module.exports = &#123;</span><br><span class="line">  entry: [&apos;./src/main.js&apos;],     //项目入口文件的路径，可以有多个文件</span><br><span class="line">  output: &#123;     //定义webpack输出的文件，这里设置了文件输出在dist文件夹下面的build.js</span><br><span class="line">    path: &apos;./dist&apos;,</span><br><span class="line">    publicPath:&apos;./dist/&apos;,</span><br><span class="line">    filename: &apos;build.js&apos;</span><br><span class="line">  &#125;,</span><br><span class="line">  //配置自动刷新,如果打开会使浏览器刷新而不是热替换</span><br><span class="line">  /*devServer: &#123;</span><br><span class="line">    historyApiFallback: true,</span><br><span class="line">    hot: false,</span><br><span class="line">    inline: true,</span><br><span class="line">    grogress: true</span><br><span class="line">  &#125;,*/</span><br><span class="line">  module: &#123;</span><br><span class="line">    loaders: [</span><br><span class="line">      //转化ES6语法</span><br><span class="line">      &#123;</span><br><span class="line">        test: /\.js$/,          //这里是匹配文件的正则</span><br><span class="line">        loader: &apos;babel&apos;,        //这里是指定调用loader去处理对应文件类型</span><br><span class="line">        exclude: /node_modules/</span><br><span class="line">      &#125;,</span><br><span class="line">      //解析.vue文件</span><br><span class="line">      &#123;</span><br><span class="line">        test:/\.vue$/,</span><br><span class="line">        loader:&apos;vue&apos;</span><br><span class="line">      &#125;,</span><br><span class="line">      //图片转化，小于8K自动转化为base64的编码</span><br><span class="line">      &#123;</span><br><span class="line">        test: /\.(png|jpg|gif)$/,</span><br><span class="line">        loader:&apos;url-loader?limit=8192&apos;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  vue:&#123;</span><br><span class="line">    loaders:&#123;</span><br><span class="line">      js:&apos;babel&apos; //loader来这里吧。</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  resolve: &#123;</span><br><span class="line">        // require时省略的扩展名，如：require(&apos;app&apos;) 不需要app.js</span><br><span class="line">        extensions: [&apos;&apos;, &apos;.js&apos;, &apos;.vue&apos;],</span><br><span class="line">        // 配置简写，路径可以省略文件类型</span><br><span class="line">        alias: &#123;</span><br><span class="line">            filter: path.join(__dirname, &apos;./src/filters&apos;),</span><br><span class="line">            components: path.join(__dirname, &apos;./src/components&apos;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;https://img.cuihp.top/2aff6f722178a78759ea1635918a0df8.jpg&quot;/&gt;&lt;h3 id=&quot;webpack安装&quot;&gt;&lt;a href=&quot;#webpack安装&quot; class=&quot;headerlink&quot; title=&quot;web
      
    
    </summary>
    
      <category term="other" scheme="https://blog.cuihp.top/categories/other/"/>
    
    
      <category term="Vue" scheme="https://blog.cuihp.top/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>责任链模式</title>
    <link href="https://blog.cuihp.top/2016/04/0204cjimryffj0017ppfyef0ob06q.html"/>
    <id>https://blog.cuihp.top/2016/04/0204cjimryffj0017ppfyef0ob06q.html</id>
    <published>2016-04-02T11:47:40.000Z</published>
    <updated>2018-05-07T09:45:38.741Z</updated>
    
    <content type="html"><![CDATA[<img src="https://img.cuihp.top/3b1e698b1b9dfdeeedaef1a926e76e0c.jpg"/><h3 id="责任链模式简介："><a href="#责任链模式简介：" class="headerlink" title="责任链模式简介："></a>责任链模式简介：</h3><p> 责任链模式（Chain of Responsibility Pattern）是一种设计模式，对于责任链模式可以理解为进行一次“击鼓传花”的游戏，每个玩家都有一位下家，这个玩家只要知道自己的下家，自己不符合条件就传递给下家。</p><p> 将所有执行者围成一条直链，或者一条环链，或者一个树结构，每一位执行者不需要知道自己的上家，只需要知道自己的下家，这样一个请求过来，请求在链上传递，直到最终有一个执行者处理这个请求。发送请求的客户端不知道哪一位执行者最终处理这个请求，这可以使请求的发送者和请求的处理者解耦。</p><h3 id="代码结构："><a href="#代码结构：" class="headerlink" title="代码结构："></a>代码结构：</h3><p>需要有一个作为规定规范的抽象的执行者：这通常使用抽象类，规定了每一位参与游戏的玩家需要有一个下家、以及“执行请求”的抽象方法，让玩家自己去实现具体内容，并为他们提供”如果自己不处理请求时使下家执行的方法。</p><p>同时需要有具体执行者的角色：这些具体的执行者继承了抽象执行者，同时规定这些具体执行者必须知道自己的下家（使用构造函数实现），他们需要实现自己执行请求的方法：如果自己无法处理或不满足要求将请求转给下家去做。     </p><h4 id="抽象执行者（Player）："><a href="#抽象执行者（Player）：" class="headerlink" title="抽象执行者（Player）："></a>抽象执行者（Player）：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">//抽象执行者：玩家</span><br><span class="line">public abstract class Player&#123;</span><br><span class="line">／／自己的下家</span><br><span class="line">private Player nextPlayer;</span><br><span class="line"></span><br><span class="line">abstract public void doing(int i);</span><br><span class="line"></span><br><span class="line">    //为子类提供set 方法</span><br><span class="line">    public void setNextPlayer（Player nextPlayer）&#123;</span><br><span class="line">    this.nextPlayer = nextPlayer;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //将请求传给下家处理</span><br><span class="line">    public void next(int i)&#123;</span><br><span class="line">    if(nextPlayer !=null)&#123;</span><br><span class="line">    nextPlayer.doing(i);</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">    //没有下一位时候进行的操作</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="具体执行者："><a href="#具体执行者：" class="headerlink" title="具体执行者："></a>具体执行者：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">public class XiaoZHang extends Player&#123;</span><br><span class="line">  //每一位玩家知道自己的下家</span><br><span class="line">  public XiaoZHang(Player nextPlayer)&#123;</span><br><span class="line">     this.setNextPlayer = nextPlayer;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @Override</span><br><span class="line">  public void doing(int i)&#123;</span><br><span class="line">     if(i==1)&#123;</span><br><span class="line">     //做相应的事情</span><br><span class="line">     &#125;else&#123;</span><br><span class="line">     // 交给下个人处理</span><br><span class="line">     next(i);</span><br><span class="line">     &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public class XiaoWang extends Player&#123;</span><br><span class="line">  //每一位玩家知道自己的下家</span><br><span class="line">  public XiaoZHang(Player nextPlayer)&#123;</span><br><span class="line">     this.setNextPlayer = nextPlayer;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @Override</span><br><span class="line">  public void doing(int i)&#123;</span><br><span class="line">     if(i==2)&#123;</span><br><span class="line">     //做相应的事情</span><br><span class="line">     &#125;else&#123;</span><br><span class="line">     // 交给下个人处理</span><br><span class="line">     next(i);</span><br><span class="line">     &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">public class XiaoLi extends Player&#123;</span><br><span class="line">  //每一位玩家知道自己的下家</span><br><span class="line">  public XiaoZHang(Player nextPlayer)&#123;</span><br><span class="line">     this.setNextPlayer = nextPlayer;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @Override</span><br><span class="line">  public void doing(int i)&#123;</span><br><span class="line">     if(i==3)&#123;</span><br><span class="line">     //做相应的事情</span><br><span class="line">     &#125;else&#123;</span><br><span class="line">     // 交给下个人处理</span><br><span class="line">     next(i);</span><br><span class="line">     &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// 客户端不必关系具体哪一执行者去执行，只需要去做自己想做的事情就好啦</span><br><span class="line"> Player player=new XiaoZhang(new XiaoWang(new XiaoLi(null)));</span><br><span class="line"> palyer.doing(2);</span><br></pre></td></tr></table></figure><h3 id="小结："><a href="#小结：" class="headerlink" title="小结："></a>小结：</h3><ul><li>很多的对象由每一个对象对其下家的引用而连接起来的一条链。</li><li>请求在这个链上传递，知道链上的某一个对象决定处理此请求。</li><li>发出这个请求的客户端并不知道链上的哪一个对象最终处理这个请求。</li><li>责任链可能是一条直线、一个环链甚至一个树结构的一部分。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;https://img.cuihp.top/3b1e698b1b9dfdeeedaef1a926e76e0c.jpg&quot;/&gt;&lt;h3 id=&quot;责任链模式简介：&quot;&gt;&lt;a href=&quot;#责任链模式简介：&quot; class=&quot;headerlink&quot; title=&quot;责任链模式
      
    
    </summary>
    
      <category term="design patterns" scheme="https://blog.cuihp.top/categories/design-patterns/"/>
    
    
      <category term="design patterns" scheme="https://blog.cuihp.top/tags/design-patterns/"/>
    
  </entry>
  
  <entry>
    <title>VLC-Android 源码编译</title>
    <link href="https://blog.cuihp.top/2016/03/2803cjimryep4000bppfy47t1acbo.html"/>
    <id>https://blog.cuihp.top/2016/03/2803cjimryep4000bppfy47t1acbo.html</id>
    <published>2016-03-28T12:12:43.000Z</published>
    <updated>2018-05-07T09:46:36.452Z</updated>
    
    <content type="html"><![CDATA[<img src="https://img.cuihp.top/1e7e1d74339d6a43decb981812c664af.jpg"/><ul><li>环境设置</li></ul><p>设置$ANDROID_SDK为指向您的 Android SDK 目录<br><code>export ANDROID_SDK=/path/to/android-sdk</code><br>设置$ANDROID_NDK为指向您的 Android NDK 目录<br><code>export ANDROID_NDK=/path/to/android-ndk</code><br>将一些有用的二进制文件添加到您的$PATH<br><code>export PATH=$PATH:$ANDROID_SDK/platform-tools:$ANDROID_SDK/tools</code></p><p>例如</p> <figure class="highlight plain"><figcaption><span>ANDROID_SDK</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export ANDROID_NDK=/Users/cuihp/Library/Android/sdk/ndk-bundle</span><br><span class="line">export PATH=$PATH:$ANDROID_SDK/platform-tools:$ANDROID_SDK/tools</span><br></pre></td></tr></table></figure><ul><li><p>Get VLC Source</p><p>  <code>git clone https://code.videolan.org/videolan/vlc-android.git</code></p></li><li><p>分支版本 <a href="https://code.videolan.org/videolan/vlc-android/branches" target="_blank" rel="noopener">https://code.videolan.org/videolan/vlc-android/branches</a></p></li><li><p>进入vlc-android,执行  sh compile.sh</p></li><li><p>参考文档 <a href="https://wiki.videolan.org/AndroidCompile/" target="_blank" rel="noopener">https://wiki.videolan.org/AndroidCompile/</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;https://img.cuihp.top/1e7e1d74339d6a43decb981812c664af.jpg&quot;/&gt;&lt;ul&gt;
&lt;li&gt;环境设置&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;设置$ANDROID_SDK为指向您的 Android SDK 目录&lt;br&gt;&lt;co
      
    
    </summary>
    
      <category term="android" scheme="https://blog.cuihp.top/categories/android/"/>
    
    
      <category term="video" scheme="https://blog.cuihp.top/tags/video/"/>
    
  </entry>
  
  <entry>
    <title>编码</title>
    <link href="https://blog.cuihp.top/2016/01/2001cjimryfff0015ppfyepjhmxx7.html"/>
    <id>https://blog.cuihp.top/2016/01/2001cjimryfff0015ppfyepjhmxx7.html</id>
    <published>2016-01-20T06:30:00.000Z</published>
    <updated>2018-05-07T09:45:22.629Z</updated>
    
    <content type="html"><![CDATA[<img src="https://img.cuihp.top/4876ae62571f63fdb5d06bfb5f7d6bcc.jpg"/><p>计算机只能处理数字，如果要处理文本，就必须先把文本转换为数字才能处理。</p><p>最早的计算机在设计时采用8个比特（bit）作为一个字节（byte），所以，一个字节能表示的最大的整数就是255（二进制11111111=十进制255），如果要表示更大的整数，就必须用更多的字节。比如两个字节可以表示的最大整数是65535，4个字节可以表示的最大整数是4294967295。</p><p>由于计算机是美国人发明的，因此，最早只有127个字母被编码到计算机里，也就是大小写英文字母、数字和一些符号，这个编码表被称为ASCII编码，比如大写字母A的编码是65，小写字母z的编码是122。</p><p>但是要处理中文显然一个字节是不够的，至少需要两个字节，而且还不能和ASCII编码冲突，所以，中国制定了GB2312编码，用来把中文编进去。</p><p>你可以想得到的是，全世界有上百种语言，日本把日文编到Shift_JIS里，韩国把韩文编到Euc-kr里，各国有各国的标准，就会不可避免地出现冲突，结果就是，在多语言混合的文本中，显示出来会有乱码。<br>因此，Unicode应运而生。Unicode把所有语言都统一到一套编码里，这样就不会再有乱码问题了。</p><p>Unicode标准也在不断发展，但最常用的是用两个字节表示一个字符（如果要用到非常偏僻的字符，就需要4个字节）。现代操作系统和大多数编程语言都直接支持Unicode。</p><p>现在，捋一捋ASCII编码和Unicode编码的区别：ASCII编码是1个字节，而Unicode编码通常是2个字节。</p><p>字母A用ASCII编码是十进制的65，二进制的01000001；</p><p>字符0用ASCII编码是十进制的48，二进制的00110000，注意字符’0’和整数0是不同的；</p><p>汉字中已经超出了ASCII编码的范围，用Unicode编码是十进制的20013，二进制的01001110 00101101。</p><p>你可以猜测，如果把ASCII编码的A用Unicode编码，只需要在前面补0就可以，因此，A的Unicode编码是00000000 01000001。</p><p>新的问题又出现了：如果统一成Unicode编码，乱码问题从此消失了。但是，如果你写的文本基本上全部是英文的话，用Unicode编码比ASCII编码需要多一倍的存储空间，在存储和传输上就十分不划算。</p><p>所以，本着节约的精神，又出现了把Unicode编码转化为“可变长编码”的UTF-8编码。UTF-8编码把一个Unicode字符根据不同的数字大小编码成1-6个字节，常用的英文字母被编码成1个字节，汉字通常是3个字节，只有很生僻的字符才会被编码成4-6个字节。如果你要传输的文本包含大量英文字符，用UTF-8编码就能节省空间：</p><table><thead><tr><th>字符</th><th>ASCII</th><th>Unicode</th><th>UTF-8</th></tr></thead><tbody><tr><td>A</td><td>01000001</td><td>00000000 01000001</td><td>01000001</td></tr><tr><td>中</td><td>01001110 00101101</td><td>11100100 10111000</td><td>10101101</td></tr></tbody></table><p>从上面的表格还可以发现，UTF-8编码有一个额外的好处，就是ASCII编码实际上可以被看成是UTF-8编码的一部分，所以，大量只支持ASCII编码的历史遗留软件可以在UTF-8编码下继续工作。</p><p>搞清楚了ASCII、Unicode和UTF-8的关系，我们就可以总结一下现在计算机系统通用的字符编码工作方式：</p><p>在计算机内存中，统一使用Unicode编码，当需要保存到硬盘或者需要传输的时候，就转换为UTF-8编码。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;https://img.cuihp.top/4876ae62571f63fdb5d06bfb5f7d6bcc.jpg&quot;/&gt;&lt;p&gt;计算机只能处理数字，如果要处理文本，就必须先把文本转换为数字才能处理。&lt;/p&gt;
&lt;p&gt;最早的计算机在设计时采用8个比特（bit）作为
      
    
    </summary>
    
      <category term="other" scheme="https://blog.cuihp.top/categories/other/"/>
    
    
      <category term="code" scheme="https://blog.cuihp.top/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>动态隐藏APP图标</title>
    <link href="https://blog.cuihp.top/2016/01/1301cjimryep6000cppfyfx9f0rmh.html"/>
    <id>https://blog.cuihp.top/2016/01/1301cjimryep6000cppfyfx9f0rmh.html</id>
    <published>2016-01-13T14:10:32.000Z</published>
    <updated>2018-05-07T09:45:30.710Z</updated>
    
    <content type="html"><![CDATA[<img src="https://img.cuihp.top/42960c4e6bf90d1138969f48e8ca59f3.jpg"/><p>应用在安装后，将APP图标进行隐藏操作。</p><h3 id="代码如下："><a href="#代码如下：" class="headerlink" title="代码如下："></a>代码如下：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">public class MainActivity extends Activity &#123;</span><br><span class="line"> @Override</span><br><span class="line">    public void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        super.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.main);</span><br><span class="line">        // 启动后隐藏应用图标</span><br><span class="line">        PackageManager p = getPackageManager();</span><br><span class="line">        p.setComponentEnabledSetting(getComponentName(),</span><br><span class="line">                PackageManager.COMPONENT_ENABLED_STATE_DISABLED,</span><br><span class="line">                PackageManager.DONT_KILL_APP);</span><br><span class="line">        finish();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过AndroidManifest.xml配置来隐藏图标,只需要将配置里的android.intent.category.LAUNCHER这行去掉，但是会导致它无法响应消息广播，需要再加一行android.intent.category.DEFAULT配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;activity android:name=&quot;MainActivity&quot; android:label=&quot;@string/app_name&quot;&gt;</span><br><span class="line">            &lt;intent-filter&gt;</span><br><span class="line">                &lt;action android:name=&quot;android.intent.action.MAIN&quot;/&gt;</span><br><span class="line">                &lt;category android:name=&quot;android.intent.category.DEFAULT&quot;/&gt;</span><br><span class="line">            &lt;/intent-filter&gt;</span><br><span class="line">&lt;/activity&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;https://img.cuihp.top/42960c4e6bf90d1138969f48e8ca59f3.jpg&quot;/&gt;&lt;p&gt;应用在安装后，将APP图标进行隐藏操作。&lt;/p&gt;
&lt;h3 id=&quot;代码如下：&quot;&gt;&lt;a href=&quot;#代码如下：&quot; class=&quot;he
      
    
    </summary>
    
      <category term="android" scheme="https://blog.cuihp.top/categories/android/"/>
    
    
      <category term="Android" scheme="https://blog.cuihp.top/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Markdown用法</title>
    <link href="https://blog.cuihp.top/2016/01/1101cjimryep20007ppfyeulmz6lw.html"/>
    <id>https://blog.cuihp.top/2016/01/1101cjimryep20007ppfyeulmz6lw.html</id>
    <published>2016-01-11T06:10:00.000Z</published>
    <updated>2018-05-07T12:27:54.057Z</updated>
    
    <content type="html"><![CDATA[<img src="https://img.cuihp.top/83aeafc00949fd9690874a3ed6abc9fc.jpg"/><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line"></span><br><span class="line">## 二级标题</span><br><span class="line"></span><br><span class="line">### 三级标题</span><br></pre></td></tr></table></figure><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">无序列表</span><br><span class="line">* 1</span><br><span class="line">* 2</span><br><span class="line">* 3</span><br><span class="line">有序列表</span><br><span class="line">1. 有序列表1</span><br><span class="line">2. 有序列表2</span><br><span class="line">3. 有序列表3</span><br></pre></td></tr></table></figure><ul><li>1</li><li>2</li><li>3</li></ul><ol><li>有序列表1</li><li>有序列表2</li><li>有序列表3</li></ol><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; 这是一个引用</span><br></pre></td></tr></table></figure><blockquote><p>这是一个引用</p></blockquote><h3 id="图片与链接"><a href="#图片与链接" class="headerlink" title="图片与链接"></a>图片与链接</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">图片为：![CuiHp](http://cuihp.top/images/icon.png)</span><br><span class="line"></span><br><span class="line">链接为：[谁动了我的代码](http://cuihp.top)</span><br><span class="line">       &lt;http://cuihp.top&gt;</span><br></pre></td></tr></table></figure><p>图片为：<img src="http://blog.cuihp.top/images/icon.png" alt="CuiHp"></p><p>链接为：<a href="http://cuihp.top" target="_blank" rel="noopener">谁动了我的代码</a><br>          <a href="http://cuihp.top" target="_blank" rel="noopener">http://cuihp.top</a></p><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| Tables        | Tables        | Tables  |</span><br><span class="line">| ------------- |:-------------:| -------:|</span><br><span class="line">| a             | a             | a       |</span><br><span class="line">| b             | b             |   b     |</span><br><span class="line">| c             | c             |    c    |</span><br></pre></td></tr></table></figure><table><thead><tr><th>Tables</th><th style="text-align:center">Tables</th><th style="text-align:right">Tables</th></tr></thead><tbody><tr><td>a</td><td style="text-align:center">a</td><td style="text-align:right">a</td></tr><tr><td>b</td><td style="text-align:center">b</td><td style="text-align:right">b</td></tr><tr><td>c</td><td style="text-align:center">c</td><td style="text-align:right">c</td></tr></tbody></table><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Use the `printf()` function.</span><br></pre></td></tr></table></figure><p>Use the <code>printf()</code> function.</p><h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">***</span><br></pre></td></tr></table></figure><hr><h3 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">*single asterisks*</span><br><span class="line"></span><br><span class="line">_single underscores_</span><br><span class="line"></span><br><span class="line">**double asterisks**</span><br><span class="line"></span><br><span class="line">__double underscores__</span><br><span class="line">反斜杠</span><br><span class="line">\*literal asterisks\*</span><br></pre></td></tr></table></figure><p><em>single asterisks</em></p><p><em>single underscores</em></p><p><strong>double asterisks</strong></p><p><strong>double underscores</strong></p><p>反斜杠</p><p>*literal asterisks*</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;https://img.cuihp.top/83aeafc00949fd9690874a3ed6abc9fc.jpg&quot;/&gt;&lt;h3 id=&quot;标题&quot;&gt;&lt;a href=&quot;#标题&quot; class=&quot;headerlink&quot; title=&quot;标题&quot;&gt;&lt;/a&gt;标题&lt;/h3&gt;&lt;f
      
    
    </summary>
    
      <category term="other" scheme="https://blog.cuihp.top/categories/other/"/>
    
    
      <category term="Markdown" scheme="https://blog.cuihp.top/tags/Markdown/"/>
    
  </entry>
  
</feed>
